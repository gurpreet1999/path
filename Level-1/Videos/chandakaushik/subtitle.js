const base64String = "";
// Replace with your actual Base64 data

// Convert the Base64 string to binary data
const binaryData = atob(base64String);

// Create a Blob from the binary data with the appropriate MIME type ('text/vtt' for WebVTT)
const blob = new Blob([binaryData], { type: 'text/vtt' });

const blobUrl = URL.createObjectURL(blob);

console.log(blobUrl, "url");
document.getElementById('track').setAttribute('src', blobUrl);